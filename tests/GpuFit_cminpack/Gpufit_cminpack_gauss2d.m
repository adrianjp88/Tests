

rng(1);

%% test parameters
snr = 2;

%% number of fits per test point
n_fits = 1;

%% parameters determining the data to be fit
fit_size = 15;
gauss_amplitude = 500;
gauss_width = 1.0;
gauss_baseline = 10;
noise = 'gauss';

%% parameters determining how the fit is carried out
weights = [];
max_iterations = 20;
model_id = 1; %GAUSS_2D
estimator_id = 0; %LSE
n_parameters = 5;
parameters_to_fit = ones(n_parameters,1);
user_info = [];
tolerance = 0.0001;

%% parameters determining the randomness of the data
gauss_pos_offset_max = 0.5;
initial_guess_offset_frac = 0.5;
    
    fprintf('SNR = %8.3f \n', snr);
    
    [data, data_parameters, initial_guess_parameters] = ...
        generate_gauss_fit_test_data(n_fits, fit_size, gauss_amplitude, gauss_width, ...
                                     gauss_baseline, noise, gauss_pos_offset_max, ...
                                     initial_guess_offset_frac, snr);
    
    %% run cpufit
    [parameters_cpufit, converged_cpufit, chisquare_cpufit, n_iterations_cpufit, time_cpufit]...
        = cpufit(data, weights, model_id, initial_guess_parameters, tolerance, ...
                 max_iterations, parameters_to_fit, estimator_id, user_info);
             
%              lambda_info_cpufit = reshape(lambda_info_cpufit, 1000, 10);
%              lambda_info_cpufit = table(...
%                  lambda_info_cpufit(:,1),...
%                  lambda_info_cpufit(:,2),...
%                  lambda_info_cpufit(:,3),...
%                  lambda_info_cpufit(:,4),...
%                  lambda_info_cpufit(:,5),...
%                  lambda_info_cpufit(:,6),...
%                  lambda_info_cpufit(:,7),...
%                  lambda_info_cpufit(:,8),...
%                  lambda_info_cpufit(:,9),...
%                  lambda_info_cpufit(:,10));
%              lambda_info_cpufit.Properties.VariableNames...
%                  = {'lambda'...
%                     'lower_bound'...
%                     'upper_bound'...
%                     'step_bound'...
%                     'predicted_reduction'...
%                     'actual_reduction'...
%                     'directive_derivative'...
%                     'phi'...
%                     'chi'...
%                     'previous_chi'};
             
    converged_cpufit = converged_cpufit + 1;
    
    cpufit_abs_precision.a  = abs(parameters_cpufit(1) - data_parameters.a);
    cpufit_abs_precision.x0 = abs(parameters_cpufit(2) - data_parameters.x0);
    cpufit_abs_precision.y0 = abs(parameters_cpufit(3) - data_parameters.y0);
    cpufit_abs_precision.s  = abs(parameters_cpufit(4) - data_parameters.s);
    cpufit_abs_precision.b  = abs(parameters_cpufit(5) - data_parameters.b);
    
    print_fit_info(cpufit_abs_precision, time_cpufit, 'cpufit', converged_cpufit, n_iterations_cpufit);

    %% run cminpack
    [parameters_cminpack, info_cminpack, n_iterations_cminpack, time_cminpack, lambda_info_cminpack]...
        = cminpack(data, initial_guess_parameters, model_id, tolerance);
    
    lambda_info_cminpack = reshape(lambda_info_cminpack, 1000, 10);
             lambda_info_cminpack = table(...
                 lambda_info_cminpack(:,1),...
                 lambda_info_cminpack(:,2),...
                 lambda_info_cminpack(:,3),...
                 lambda_info_cminpack(:,4),...
                 lambda_info_cminpack(:,5),...
                 lambda_info_cminpack(:,6),...
                 lambda_info_cminpack(:,7),...
                 lambda_info_cminpack(:,8),...
                 lambda_info_cminpack(:,9),...
                 lambda_info_cminpack(:,10));
             lambda_info_cminpack.Properties.VariableNames...
                 = {'lambda'...
                    'lower_bound'...
                    'upper_bound'...
                    'step_bound'...
                    'predicted_reduction'...
                    'actual_reduction'...
                    'directive_derivative'...
                    'phi'...
                    'chi'...
                    'previous_chi'};
    
    converged_cminpack = (info_cminpack > 0) & (info_cminpack <= 3);

    cminpack_abs_precision.a  = abs(parameters_cminpack(1) - data_parameters.a);
    cminpack_abs_precision.x0 = abs(parameters_cminpack(2) - data_parameters.x0);
    cminpack_abs_precision.y0 = abs(parameters_cminpack(3) - data_parameters.y0);
    cminpack_abs_precision.s  = abs(parameters_cminpack(4) - data_parameters.s);
    cminpack_abs_precision.b  = abs(parameters_cminpack(5) - data_parameters.b);
    
    print_fit_info(cminpack_abs_precision, time_cminpack, 'cminpack', converged_cminpack, n_iterations_cminpack);
